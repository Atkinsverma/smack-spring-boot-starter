<?xml version="1.0" encoding="UTF-8"?>
<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd">
	<modelVersion>4.0.0</modelVersion>

	<parent>
		<groupId>org.springframework.boot</groupId>
		<artifactId>spring-boot-starter-parent</artifactId>
		<version>2.0.0.RELEASE</version>
		<relativePath /> <!-- lookup parent from repository -->
	</parent>

	<groupId>com.github.vindell</groupId>
	<artifactId>spring-boot-starter-smack</artifactId>
	<version>1.0.0-SNAPSHOT</version>
	<packaging>jar</packaging>

	<name>spring-boot-starter-smack</name>
	<url>https://github.com/vindell/spring-boot-starter-smack</url>
	<description>Starter for xfire</description>

	<licenses>
		<license>
			<name>The Apache Software License, Version 2.0</name>
			<url>http://www.apache.org/licenses/LICENSE-2.0.txt</url>
			<distribution>repo</distribution>
		</license>
	</licenses>

	<properties>
		<project.build.sourceEncoding>UTF-8</project.build.sourceEncoding>
		<project.reporting.outputEncoding>UTF-8</project.reporting.outputEncoding>
		<java.version>1.8</java.version>
		<javax.servlet-api.version>3.1.0</javax.servlet-api.version>
		<jxmpp.version>0.1.0</jxmpp.version>
		<openfire.version>4.2.0</openfire.version>
		<smack.version>4.3.0-beta1</smack.version>
		<tinder.version>1.3.0</tinder.version>
	</properties>

	<dependencyManagement>
		<dependencies>

			<!-- https://mvnrepository.com/artifact/org.igniterealtime.smack/smack-omemo -->
			<dependency>
				<groupId>org.igniterealtime.smack</groupId>
				<artifactId>smack-omemo</artifactId>
				<version>4.2.1-beta1</version>
			</dependency>
			<!-- https://mvnrepository.com/artifact/org.igniterealtime.smack/smack-omemo-signal -->
			<dependency>
				<groupId>org.igniterealtime.smack</groupId>
				<artifactId>smack-omemo-signal</artifactId>
				<version>4.2.1-beta1</version>
			</dependency>

			<!-- https://mvnrepository.com/artifact/org.igniterealtime/tinder -->
			<dependency>
				<groupId>org.igniterealtime</groupId>
				<artifactId>tinder</artifactId>
				<version>${tinder.version}</version>
			</dependency>

			<!-- https://mvnrepository.com/artifact/org.igniterealtime.whack/core -->
			<dependency>
				<groupId>org.igniterealtime.whack</groupId>
				<artifactId>core</artifactId>
				<version>2.0.1</version>
			</dependency>
			<!-- https://mvnrepository.com/artifact/org.igniterealtime.whack/sample.weather -->
			<dependency>
				<groupId>org.igniterealtime.whack</groupId>
				<artifactId>sample.weather</artifactId>
				<version>2.0.1</version>
			</dependency>

			<!-- https://mvnrepository.com/artifact/org.igniterealtime.jbosh/jbosh -->
			<dependency>
				<groupId>org.igniterealtime.jbosh</groupId>
				<artifactId>jbosh</artifactId>
				<version>0.9.0</version>
			</dependency>

			<!-- https://mvnrepository.com/artifact/org.igniterealtime/rest-api-client -->
			<dependency>
				<groupId>org.igniterealtime</groupId>
				<artifactId>rest-api-client</artifactId>
				<version>1.1.4</version>
			</dependency>

			<!-- https://mvnrepository.com/artifact/org.igniterealtime.jxmpp/jxmpp-jid -->
			<dependency>
				<groupId>org.igniterealtime.jxmpp</groupId>
				<artifactId>jxmpp-jid</artifactId>
				<version>${jxmpp.version}</version>
			</dependency>
			<!-- https://mvnrepository.com/artifact/org.igniterealtime.jxmpp/jxmpp-core -->
			<dependency>
				<groupId>org.igniterealtime.jxmpp</groupId>
				<artifactId>jxmpp-core</artifactId>
				<version>${jxmpp.version}</version>
			</dependency>
			<!-- https://mvnrepository.com/artifact/org.igniterealtime.jxmpp/jxmpp-util-cache -->
			<dependency>
				<groupId>org.igniterealtime.jxmpp</groupId>
				<artifactId>jxmpp-util-cache</artifactId>
				<version>${jxmpp.version}</version>
			</dependency>
			<!-- https://mvnrepository.com/artifact/org.igniterealtime.jxmpp/jxmpp-stringprep-libidn -->
			<dependency>
				<groupId>org.igniterealtime.jxmpp</groupId>
				<artifactId>jxmpp-stringprep-libidn</artifactId>
				<version>${jxmpp.version}</version>
			</dependency>

			<!-- https://mvnrepository.com/artifact/org.igniterealtime.openfire/xmppserver -->
			<dependency>
				<groupId>org.igniterealtime.openfire</groupId>
				<artifactId>xmppserver</artifactId>
				<version>${openfire.version}</version>
			</dependency>
			<!-- https://mvnrepository.com/artifact/org.igniterealtime.openfire/dbutil -->
			<dependency>
				<groupId>org.igniterealtime.openfire</groupId>
				<artifactId>dbutil</artifactId>
				<version>${openfire.version}</version>
			</dependency>
			<!-- https://mvnrepository.com/artifact/org.igniterealtime.openfire/i18n -->
			<dependency>
				<groupId>org.igniterealtime.openfire</groupId>
				<artifactId>i18n</artifactId>
				<version>${openfire.version}</version>
			</dependency>
			<!-- https://mvnrepository.com/artifact/org.igniterealtime.openfire/webadmintld -->
			<dependency>
				<groupId>org.igniterealtime.openfire</groupId>
				<artifactId>webadmintld</artifactId>
				<version>${openfire.version}</version>
			</dependency>
			<!-- https://mvnrepository.com/artifact/org.igniterealtime.openfire/plugins -->
			<dependency>
				<groupId>org.igniterealtime.openfire</groupId>
				<artifactId>plugins</artifactId>
				<version>${openfire.version}</version>
				<type>pom</type>
				<scope>import</scope>
			</dependency>

			<!-- https://mvnrepository.com/artifact/org.igniterealtime.smack/smack-android -->
			<dependency>
				<groupId>org.igniterealtime.smack</groupId>
				<artifactId>smack-android</artifactId>
				<version>${smack.version}</version>
			</dependency>
			<!-- https://mvnrepository.com/artifact/org.igniterealtime.smack/smack-android-extensions -->
			<dependency>
				<groupId>org.igniterealtime.smack</groupId>
				<artifactId>smack-android-extensions</artifactId>
				<version>${smack.version}</version>
			</dependency>
			<!-- https://mvnrepository.com/artifact/org.igniterealtime.smack/smack-bosh -->
			<dependency>
				<groupId>org.igniterealtime.smack</groupId>
				<artifactId>smack-bosh</artifactId>
				<version>${smack.version}</version>
			</dependency>
			<!-- https://mvnrepository.com/artifact/org.igniterealtime.smack/smack-core -->
			<dependency>
				<groupId>org.igniterealtime.smack</groupId>
				<artifactId>smack-core</artifactId>
				<version>${smack.version}</version>
			</dependency>
			<!-- https://mvnrepository.com/artifact/org.igniterealtime.smack/smack-compression-jzlib -->
			<dependency>
				<groupId>org.igniterealtime.smack</groupId>
				<artifactId>smack-compression-jzlib</artifactId>
				<version>${smack.version}</version>
			</dependency>
			<!-- https://mvnrepository.com/artifact/org.igniterealtime.smack/smack-debug -->
			<dependency>
				<groupId>org.igniterealtime.smack</groupId>
				<artifactId>smack-debug</artifactId>
				<version>${smack.version}</version>
			</dependency>
			<!-- https://mvnrepository.com/artifact/org.igniterealtime.smack/smack-debug-slf4j -->
			<dependency>
				<groupId>org.igniterealtime.smack</groupId>
				<artifactId>smack-debug-slf4j</artifactId>
				<version>${smack.version}</version>
			</dependency>
			<!-- https://mvnrepository.com/artifact/org.igniterealtime.smack/smack-extensions -->
			<dependency>
				<groupId>org.igniterealtime.smack</groupId>
				<artifactId>smack-extensions</artifactId>
				<version>${smack.version}</version>
			</dependency>
			<!-- https://mvnrepository.com/artifact/org.igniterealtime.smack/smack-experimental -->
			<dependency>
				<groupId>org.igniterealtime.smack</groupId>
				<artifactId>smack-experimental</artifactId>
				<version>${smack.version}</version>
			</dependency>
			<!-- https://mvnrepository.com/artifact/org.igniterealtime.smack/smack-java7 -->
			<dependency>
				<groupId>org.igniterealtime.smack</groupId>
				<artifactId>smack-java7</artifactId>
				<version>${smack.version}</version>
			</dependency>
			<!-- https://mvnrepository.com/artifact/org.igniterealtime.smack/smack-legacy -->
			<dependency>
				<groupId>org.igniterealtime.smack</groupId>
				<artifactId>smack-legacy</artifactId>
				<version>${smack.version}</version>
			</dependency>
			<!-- https://mvnrepository.com/artifact/org.igniterealtime.smack/smack-tcp -->
			<dependency>
				<groupId>org.igniterealtime.smack</groupId>
				<artifactId>smack-tcp</artifactId>
				<version>${smack.version}</version>
			</dependency>
			<!-- https://mvnrepository.com/artifact/org.igniterealtime.smack/smack-im -->
			<dependency>
				<groupId>org.igniterealtime.smack</groupId>
				<artifactId>smack-im</artifactId>
				<version>${smack.version}</version>
			</dependency>
			<!-- https://mvnrepository.com/artifact/org.igniterealtime.smack/smack-repl -->
			<dependency>
				<groupId>org.igniterealtime.smack</groupId>
				<artifactId>smack-repl</artifactId>
				<version>${smack.version}</version>
			</dependency>
			<!-- https://mvnrepository.com/artifact/org.igniterealtime.smack/smack-resolver-javax -->
			<dependency>
				<groupId>org.igniterealtime.smack</groupId>
				<artifactId>smack-resolver-javax</artifactId>
				<version>${smack.version}</version>
			</dependency>
			<!-- https://mvnrepository.com/artifact/org.igniterealtime.smack/smack-resolver-minidns -->
			<dependency>
				<groupId>org.igniterealtime.smack</groupId>
				<artifactId>smack-resolver-minidns</artifactId>
				<version>${smack.version}</version>
			</dependency>
			<!-- https://mvnrepository.com/artifact/org.igniterealtime.smack/smack-resolver-dnsjava -->
			<dependency>
				<groupId>org.igniterealtime.smack</groupId>
				<artifactId>smack-resolver-dnsjava</artifactId>
				<version>${smack.version}</version>
			</dependency>
			<!-- https://mvnrepository.com/artifact/org.igniterealtime.smack/smack-sasl-javax -->
			<dependency>
				<groupId>org.igniterealtime.smack</groupId>
				<artifactId>smack-sasl-javax</artifactId>
				<version>${smack.version}</version>
			</dependency>
			<!-- https://mvnrepository.com/artifact/org.igniterealtime.smack/smack-sasl-provided -->
			<dependency>
				<groupId>org.igniterealtime.smack</groupId>
				<artifactId>smack-sasl-provided</artifactId>
				<version>${smack.version}</version>
			</dependency>
			<!-- https://mvnrepository.com/artifact/org.igniterealtime.smack/smack-integration-test -->
			<dependency>
				<groupId>org.igniterealtime.smack</groupId>
				<artifactId>smack-integration-test</artifactId>
				<version>${smack.version}</version>
			</dependency>

		</dependencies>
	</dependencyManagement>

	<dependencies>

		<!-- Java Servlet API -->
		<dependency>
			<groupId>javax.servlet</groupId>
			<artifactId>javax.servlet-api</artifactId>
			<optional>true</optional>
		</dependency>

		<dependency>
			<groupId>org.slf4j</groupId>
			<artifactId>slf4j-api</artifactId>
		</dependency>
		<dependency>
			<groupId>org.slf4j</groupId>
			<artifactId>slf4j-log4j12</artifactId>
			<scope>test</scope>
		</dependency>

		<!-- Core starter, including auto-configuration support, logging and YAML -->
		<dependency>
			<groupId>org.springframework.boot</groupId>
			<artifactId>spring-boot-starter</artifactId>
			<exclusions>
				<exclusion>
					<groupId>org.springframework.boot</groupId>
					<artifactId>spring-boot-starter-logging</artifactId>
				</exclusion>
			</exclusions>
		</dependency>
		<!-- Spring Boot Test 依赖 -->
		<dependency>
			<groupId>org.springframework.boot</groupId>
			<artifactId>spring-boot-starter-test</artifactId>
			<scope>test</scope>
		</dependency>
		<!-- @ConfigurationProperties annotation processing (metadata for IDEs) -->
		<dependency>
			<groupId>org.springframework.boot</groupId>
			<artifactId>spring-boot-configuration-processor</artifactId>
			<optional>true</optional>
		</dependency>
		<!-- Compile dependencies -->
		<dependency>
			<groupId>org.springframework.boot</groupId>
			<artifactId>spring-boot-autoconfigure</artifactId>
		</dependency>
		<dependency>
			<groupId>org.springframework</groupId>
			<artifactId>spring-webmvc</artifactId>
		</dependency>
		<!-- https://mvnrepository.com/artifact/org.igniterealtime.whack/sample.weather -->
		<dependency>
			<groupId>org.igniterealtime.whack</groupId>
			<artifactId>sample.weather</artifactId>
		</dependency>
		<!-- https://mvnrepository.com/artifact/org.igniterealtime/rest-api-client -->
		<dependency>
			<groupId>org.igniterealtime</groupId>
			<artifactId>rest-api-client</artifactId>
		</dependency>
		<dependency>
			<groupId>org.igniterealtime.jxmpp</groupId>
			<artifactId>jxmpp-stringprep-libidn</artifactId>
		</dependency>

		<!-- https://mvnrepository.com/artifact/org.igniterealtime.smack/smack-android -->
		<dependency>
			<groupId>org.igniterealtime.smack</groupId>
			<artifactId>smack-android</artifactId>
		</dependency>
		<!-- https://mvnrepository.com/artifact/org.igniterealtime.smack/smack-android-extensions -->
		<dependency>
			<groupId>org.igniterealtime.smack</groupId>
			<artifactId>smack-android-extensions</artifactId>
		</dependency>
		<!-- https://mvnrepository.com/artifact/org.igniterealtime.smack/smack-bosh -->
		<dependency>
			<groupId>org.igniterealtime.smack</groupId>
			<artifactId>smack-bosh</artifactId>
		</dependency>
		<!-- https://mvnrepository.com/artifact/org.igniterealtime.smack/smack-core -->
		<dependency>
			<groupId>org.igniterealtime.smack</groupId>
			<artifactId>smack-core</artifactId>
		</dependency>
		<!-- https://mvnrepository.com/artifact/org.igniterealtime.smack/smack-compression-jzlib -->
		<dependency>
			<groupId>org.igniterealtime.smack</groupId>
			<artifactId>smack-compression-jzlib</artifactId>
		</dependency>
		<!-- https://mvnrepository.com/artifact/org.igniterealtime.smack/smack-debug -->
		<dependency>
			<groupId>org.igniterealtime.smack</groupId>
			<artifactId>smack-debug</artifactId>
		</dependency>
		<!-- https://mvnrepository.com/artifact/org.igniterealtime.smack/smack-debug-slf4j -->
		<dependency>
			<groupId>org.igniterealtime.smack</groupId>
			<artifactId>smack-debug-slf4j</artifactId>
		</dependency>
		<!-- https://mvnrepository.com/artifact/org.igniterealtime.smack/smack-extensions -->
		<dependency>
			<groupId>org.igniterealtime.smack</groupId>
			<artifactId>smack-extensions</artifactId>
		</dependency>
		<!-- https://mvnrepository.com/artifact/org.igniterealtime.smack/smack-experimental -->
		<dependency>
			<groupId>org.igniterealtime.smack</groupId>
			<artifactId>smack-experimental</artifactId>
		</dependency>
		<!-- https://mvnrepository.com/artifact/org.igniterealtime.smack/smack-java7 -->
		<dependency>
			<groupId>org.igniterealtime.smack</groupId>
			<artifactId>smack-java7</artifactId>
		</dependency>
		<!-- https://mvnrepository.com/artifact/org.igniterealtime.smack/smack-legacy -->
		<dependency>
			<groupId>org.igniterealtime.smack</groupId>
			<artifactId>smack-legacy</artifactId>
		</dependency>
		<!-- https://mvnrepository.com/artifact/org.igniterealtime.smack/smack-tcp -->
		<dependency>
			<groupId>org.igniterealtime.smack</groupId>
			<artifactId>smack-tcp</artifactId>
		</dependency>
		<!-- https://mvnrepository.com/artifact/org.igniterealtime.smack/smack-im -->
		<dependency>
			<groupId>org.igniterealtime.smack</groupId>
			<artifactId>smack-im</artifactId>
		</dependency>
		<!-- https://mvnrepository.com/artifact/org.igniterealtime.smack/smack-repl -->
		<dependency>
			<groupId>org.igniterealtime.smack</groupId>
			<artifactId>smack-repl</artifactId>
		</dependency>
		<!-- https://mvnrepository.com/artifact/org.igniterealtime.smack/smack-resolver-javax -->
		<dependency>
			<groupId>org.igniterealtime.smack</groupId>
			<artifactId>smack-resolver-javax</artifactId>
		</dependency>
		<!-- https://mvnrepository.com/artifact/org.igniterealtime.smack/smack-resolver-minidns -->
		<dependency>
			<groupId>org.igniterealtime.smack</groupId>
			<artifactId>smack-resolver-minidns</artifactId>
		</dependency>
		<!-- https://mvnrepository.com/artifact/org.igniterealtime.smack/smack-resolver-dnsjava -->
		<dependency>
			<groupId>org.igniterealtime.smack</groupId>
			<artifactId>smack-resolver-dnsjava</artifactId>
		</dependency>
		<!-- https://mvnrepository.com/artifact/org.igniterealtime.smack/smack-sasl-javax -->
		<dependency>
			<groupId>org.igniterealtime.smack</groupId>
			<artifactId>smack-sasl-javax</artifactId>
		</dependency>
		<!-- https://mvnrepository.com/artifact/org.igniterealtime.smack/smack-sasl-provided -->
		<dependency>
			<groupId>org.igniterealtime.smack</groupId>
			<artifactId>smack-sasl-provided</artifactId>
		</dependency>

	</dependencies>

	<build>
		<pluginManagement>
			<plugins>
				<!-- 编译插件：编译主代码至主输出目录 -->
				<plugin>
					<groupId>org.apache.maven.plugins</groupId>
					<artifactId>maven-compiler-plugin</artifactId>
					<!-- 设置源文件编码方式 -->
					<configuration>
						<defaultLibBundleDir>lib</defaultLibBundleDir>
						<!-- 源代码编译版本 -->
						<source>${java.version}</source>
						<!-- 目标平台编译版本 -->
						<target>${java.version}</target>
						<!-- 字符集编码 -->
						<encoding>${project.build.sourceEncoding}</encoding>
						<!-- -->
						<maxmem>512M</maxmem>
					</configuration>
				</plugin>
				<!-- 资源插件：复制主资源文件至主输出目录 -->
				<plugin>
					<groupId>org.apache.maven.plugins</groupId>
					<artifactId>maven-resources-plugin</artifactId>
					<!-- 解决资源文件的编码问题 -->
					<configuration>
						<!-- 字符集编码 -->
						<encoding>${project.build.sourceEncoding}</encoding>
					</configuration>
				</plugin>
				<!-- 单元测试插件 ：执行测试用例 -->
				<plugin>
					<groupId>org.apache.maven.plugins</groupId>
					<artifactId>maven-surefire-plugin</artifactId>
					<configuration>
						<!-- 跳过单元测试 -->
						<skip>true</skip>
						<skipTests>true</skipTests>
						<!-- forkMode 可设置值有 “never”， “once”， “always” 和 “pertest”。 pretest： 
							每一个测试创建一个新进程，为每个测试创建新的JVM是单独测试的最彻底方式，但也是最慢的，不适合hudson上持续回归。 once：在一个进程中进行所有测试。once为默认设置，在Hudson上持续回归时建议使用默认设置。 
							always：在一个进程中并行的运行脚本，Junit4.7以上版本才可以使用，surefire的版本要在2.6以上提供这个功能，其中 threadCount：执行时，指定可分配的线程数量。只和参数parallel配合使用有效。默认：5。 -->
						<forkMode>once</forkMode>
						<argLine>-Xmx1024m -XX:PermSize=256m -XX:MaxPermSize=256m</argLine>
						<additionalClasspathElements>
							<additionalClasspathElement>
								${basedir}/target/test-classes
							</additionalClasspathElement>
						</additionalClasspathElements>
						<includes>
							<include>**/*Test.java</include>
						</includes>
						<excludes>
							<exclude>**/TestBean.java</exclude>
						</excludes>
					</configuration>
				</plugin>
				<!-- jar包生成插件 ：创建项目jar包 -->
				<plugin>
					<groupId>org.apache.maven.plugins</groupId>
					<artifactId>maven-jar-plugin</artifactId>
					<!-- 打包jar文件时，配置manifest文件，加入lib包的jar依赖 -->
					<configuration>
						<archive>
							<manifest>
								<addClasspath>true</addClasspath>
							</manifest>
						</archive>
					</configuration>
				</plugin>
				<!-- 安装插件：将项目输出构件安装到本地仓库 -->
				<plugin>
					<groupId>org.apache.maven.plugins</groupId>
					<artifactId>maven-install-plugin</artifactId>
				</plugin>
				<!-- 发布插件 ：将项目输出构件部署到远程仓库 -->
				<plugin>
					<groupId>org.apache.maven.plugins</groupId>
					<artifactId>maven-deploy-plugin</artifactId>
				</plugin>
				<!-- 源码插件:发布时自动将源码同时发布 -->
				<plugin>
					<groupId>org.apache.maven.plugins</groupId>
					<artifactId>maven-source-plugin</artifactId>
					<!-- 打包source文件为jar文件 -->
					<configuration>
						<testFailureIgnore>true</testFailureIgnore>
						<attach>true</attach>
						<encoding>${project.build.sourceEncoding}</encoding>
					</configuration>
					<executions>
						<execution>
							<id>attach-sources</id>
							<phase>package</phase>
							<goals>
								<goal>jar-no-fork</goal>
							</goals>
						</execution>
					</executions>
				</plugin>
				<!-- 文档插件:发布时自动生成文档 -->
				<plugin>
					<groupId>org.apache.maven.plugins</groupId>
					<artifactId>maven-javadoc-plugin</artifactId>
					<configuration>
						<aggregate>true</aggregate>
						<charset>UTF-8</charset>
						<encoding>${project.build.sourceEncoding}</encoding>
						<docencoding>UTF-8</docencoding>
					</configuration>
					<executions>
						<execution>
							<id>attach-javadocs</id>
							<phase>package</phase>
							<goals>
								<goal>jar</goal>
							</goals>
						</execution>
					</executions>
				</plugin>
			</plugins>
		</pluginManagement>
		<plugins>
			<!-- 资源插件：复制主资源文件至主输出目录 -->
			<plugin>
				<groupId>org.apache.maven.plugins</groupId>
				<artifactId>maven-resources-plugin</artifactId>
			</plugin>
			<!-- 编译插件：编译主代码至主输出目录 -->
			<plugin>
				<groupId>org.apache.maven.plugins</groupId>
				<artifactId>maven-compiler-plugin</artifactId>
			</plugin>
			<!-- 单元测试插件 ：执行测试用例 -->
			<plugin>
				<groupId>org.apache.maven.plugins</groupId>
				<artifactId>maven-surefire-plugin</artifactId>
			</plugin>
			<!-- jar包生成插件 ：创建项目jar包 -->
			<plugin>
				<groupId>org.apache.maven.plugins</groupId>
				<artifactId>maven-jar-plugin</artifactId>
			</plugin>
			<!-- 安装插件：将项目输出构件安装到本地仓库 -->
			<plugin>
				<groupId>org.apache.maven.plugins</groupId>
				<artifactId>maven-install-plugin</artifactId>
			</plugin>
			<!-- 发布插件 ：将项目输出构件部署到远程仓库 -->
			<plugin>
				<groupId>org.apache.maven.plugins</groupId>
				<artifactId>maven-deploy-plugin</artifactId>
			</plugin>
			<!-- 源码插件:发布时自动将源码同时发布 -->
			<plugin>
				<groupId>org.apache.maven.plugins</groupId>
				<artifactId>maven-source-plugin</artifactId>
			</plugin>
		</plugins>
	</build>


</project>
